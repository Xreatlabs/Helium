<html<% if (isDarkMode) { %> class="dark"<% } %>>
<head>
  <title><%= settings.name %></title>
  <link rel="icon" type="image/x-icon" href="../assets/favicon.png">
  <script>
    (function() {
      try {
        var ls = localStorage.getItem('darkMode');
        var preferDark = (ls === 'true') || (ls === null && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches);
        if (preferDark) document.documentElement.classList.add('dark');
        else document.documentElement.classList.remove('dark');
      } catch (e) {}
    })();
  </script>
  <link rel="stylesheet" href="../assets/tailwind.css">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <script src="https://unpkg.com/@popperjs/core@2.10.1/dist/umd/popper.min.js"></script>

  <!-- Inter font -->
  <link rel="preconnect" href="https://fonts.gstatic.com">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
</head>

<body class="bg-gray-100 dark:bg-gray-900 transition-colors duration-200" style="font-family: 'Inter', sans-serif;">
  <div>
    <%- include('../components/navigation') %>
    <div class="md:pl-64 flex flex-col flex-1 min-h-screen">
      <main class="flex-1 pb-8">
        <div class="py-6">
          <%- include('../components/darkmode-toggle') %>
        <% /* Skeleton loader, lasts about 0.3s to let the page content load */ %>
        <%- include('../components/skeleton') %>
        <div class="hidden max-w-7xl pt-8 mx-auto px-4 sm:px-6 md:px-8" id="content">
          <div>
            <div>
              <img class="h-32 w-full object-cover lg:h-72 rounded-3xl" src="../assets/profileBanner.png" alt=""> <!-- Path: assets/profileBanner.png - You can replace this image to change the default profile banner -->
            </div>
            <div class="mx-auto max-w-5xl px-4 sm:px-6 lg:px-8">
              <div class="-mt-12 sm:-mt-16 sm:flex sm:items-end sm:space-x-5">
                <div class="flex">
                  <img class="h-24 w-24 rounded-full ring-4 ring-white sm:h-32 sm:w-32" src="https://cdn.discordapp.com/avatars/<%= userinfo.id %>/<%= userinfo.avatar %>?size=256" alt="">
                </div>
                <div class="mt-6 sm:flex sm:min-w-0 sm:flex-1 sm:items-center sm:justify-end sm:space-x-6 sm:pb-1">
                  <div class="mt-6 min-w-0 flex-1 sm:hidden md:block">
                    <h1 class="truncate text-2xl font-medium tracking-tight text-gray-900 dark:text-gray-100"><%= userinfo.global_name %> <span class="text-gray-600 dark:text-gray-400">(<%= userinfo.username %>)</span></h1>
                  </div>
                  <div class="justify-stretch mt-6 flex flex-col space-y-3 sm:flex-row sm:space-y-0 sm:space-x-4">
                    <a href="../updateinfo" type="button" class="transition inline-flex items-center rounded-2xl bg-gray-200 dark:bg-gray-700 px-8 py-2 text-sm font-medium text-gray-600 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-gray-600">
                      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="-ml-0.5 mr-1.5 h-5 w-5 text-gray-500">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99" />
                      </svg>
                      Refresh
                    </a>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <!-- Preferences Section -->
          <div class="mt-10">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">Preferences</h3>
            <div class="bg-white dark:bg-gray-800 rounded-3xl overflow-hidden">
              <dl class="divide-y divide-gray-100 dark:divide-gray-700">
                <div class="px-6 py-6 sm:grid sm:grid-cols-3 sm:gap-4">
                  <dt class="text-sm font-medium leading-6 text-gray-900 dark:text-gray-100 flex items-center">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5 mr-2 text-blue-500">
                      <path fill-rule="evenodd" d="M10.5 2.25c0 .414-.168.75-.382.75H5.824a1.5 1.5 0 00-1.394 2.072l.335.831a1.5 1.5 0 001.394.928h8.682a1.5 1.5 0 001.394-.928l.335-.831A1.5 1.5 0 0015.176 3h-4.294c-.214 0-.382-.336-.382-.75 0-.414.168-.75.382-.75h4.294A3 3 0 0118 4.322l-.335.831a3 3 0 01-2.788 1.897H14v4.2a3 3 0 01-.879 2.121L9.879 16.621A1.5 1.5 0 018.707 17H4.293a1.5 1.5 0 01-1.172-.379l-3.242-3.25A1.5 1.5 0 010 12.199V8a3 3 0 013-3h2.877a3 3 0 012.788-1.897l.335-.831A3 3 0 0110.5 2.25z" clip-rule="evenodd" />
                    </svg>
                    Snowflakes Animation
                  </dt>
                  <dd class="mt-1 text-sm leading-6 text-gray-700 dark:text-gray-300 sm:col-span-2 sm:mt-0">
                    <div class="flex items-center justify-between">
                      <p class="text-sm text-gray-500 dark:text-gray-400">Enable or disable falling snowflakes animation</p>
                      <button id="snowflakesToggle" class="relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-blue-600 focus:ring-offset-2 bg-gray-300 dark:bg-gray-600" role="switch" aria-checked="false">
                        <span class="sr-only">Enable snowflakes</span>
                        <span id="snowflakesToggleIndicator" class="pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out translate-x-0"></span>
                      </button>
                    </div>
                  </dd>
                </div>
              </dl>
            </div>
          </div>

          <div class="card mt-10">
            <div class="card-body">
              <label class="text-sm font-medium pb-4 text-gray-600 dark:text-gray-300">User Object</label>
              <div class="bg-gray-300 dark:bg-gray-700 px-8 py-2 mt-4 rounded-t-3xl text-gray-600 dark:text-gray-300"><span class="text-gray-600 dark:text-gray-300 text-xs font-semibold">JSON</span></div>
              <pre class="text-xs bg-gray-200 dark:bg-gray-800 pb-8 pl-8 pr-8 pt-2 mb-6 rounded-b-3xl text-gray-600 dark:text-gray-300"><%= JSON.stringify(userinfo, null, 2) %></pre>
            </div>
          </div>
        </div>
      </div>
    </main>
    <%- include('../components/footer') %>
  </div>
  </div>
  
  <script>
    // Snowflakes toggle functionality
    document.addEventListener("DOMContentLoaded", function() {
      const snowflakesToggle = document.getElementById('snowflakesToggle');
      const snowflakesToggleIndicator = document.getElementById('snowflakesToggleIndicator');
      
      // Load current snowflakes preference (default: enabled)
      let hasSnowflakes = <%= typeof hasSnowflakes !== 'undefined' ? (hasSnowflakes ? 'true' : 'false') : 'true' %>;
      updateToggleUI(hasSnowflakes);
      
      snowflakesToggle.addEventListener('click', function() {
        hasSnowflakes = !hasSnowflakes;
        updateToggleUI(hasSnowflakes);
        saveSnowflakesPreference(hasSnowflakes);
      });
      
      function updateToggleUI(enabled) {
        if (enabled) {
          snowflakesToggle.classList.add('bg-blue-600');
          snowflakesToggle.classList.remove('bg-gray-300', 'dark:bg-gray-600');
          snowflakesToggleIndicator.classList.add('translate-x-5');
          snowflakesToggleIndicator.classList.remove('translate-x-0');
          snowflakesToggle.setAttribute('aria-checked', 'true');
        } else {
          snowflakesToggle.classList.remove('bg-blue-600');
          snowflakesToggle.classList.add('bg-gray-300', 'dark:bg-gray-600');
          snowflakesToggleIndicator.classList.remove('translate-x-5');
          snowflakesToggleIndicator.classList.add('translate-x-0');
          snowflakesToggle.setAttribute('aria-checked', 'false');
        }
      }
      
      function saveSnowflakesPreference(enabled) {
        fetch('/api/snowflakes', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ enabled: Boolean(enabled) })
        })
        .then(response => response.json())
        .then(data => {
          if (data.status === 'success') {
            // Reload page to show/hide snowflakes
            window.location.reload();
          } else {
            console.error('Failed to save snowflakes preference');
            // Revert toggle on error
            hasSnowflakes = !hasSnowflakes;
            updateToggleUI(hasSnowflakes);
          }
        })
        .catch(error => {
          console.error('Error saving snowflakes preference:', error);
          // Revert toggle on error
          hasSnowflakes = !hasSnowflakes;
          updateToggleUI(hasSnowflakes);
        });
      }
    });
  </script>
</body>
</html>
