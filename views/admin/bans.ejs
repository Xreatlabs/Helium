<html <% if (isDarkMode) { %> class="dark" <% } %>>
<head>
  <title><%= settings.name %> - Ban Management</title>
  <link rel="icon" type="image/x-icon" href="../assets/favicon.png">
  <script>
    (function() {
      try {
        var ls = localStorage.getItem('darkMode');
        var preferDark = (ls === 'true') || (ls === null && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches);
        if (preferDark) document.documentElement.classList.add('dark');
        else document.documentElement.classList.remove('dark');
      } catch (e) {}
    })();
  </script>
  <link rel="stylesheet" href="../assets/tailwind.css">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="preconnect" href="https://fonts.gstatic.com">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
</head>

<body class="bg-gray-100 dark:bg-gray-900 transition-colors duration-200" style="font-family: 'Inter', sans-serif;">
  <div>
    <%- include('../components/navigation') %>
    <div class="md:pl-64 flex flex-col flex-1 min-h-screen">
      <main class="flex-1 pb-8">
        <div class="py-6">
          <%- include('../components/darkmode-toggle') %>
          <%- include('../components/skeleton') %>
          <div class="hidden max-w-7xl pt-8 mx-auto px-4 sm:px-6 md:px-8" id="content">
            
            <!-- Header -->
            <div class="lg:flex lg:items-center lg:justify-between rounded-3xl mb-8">
              <div class="min-w-0 flex-1">
                <div class="flex">
                  <div class="relative">
                    <div class="bg-gray-200 dark:bg-gray-800 rounded-2xl h-11 w-11 text-center flex text-gray-400 dark:text-gray-500">
                      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5 mt-3 ml-3">
                        <path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25Zm-1.72 6.97a.75.75 0 1 0-1.06 1.06L10.94 12l-1.72 1.72a.75.75 0 1 0 1.06 1.06L12 13.06l1.72 1.72a.75.75 0 1 0 1.06-1.06L13.06 12l1.72-1.72a.75.75 0 1 0-1.06-1.06L12 10.94l-1.72-1.72Z" clip-rule="evenodd" />
                      </svg>
                    </div>
                  </div>
                  <div class="relative ml-4">
                    <h2 class="text-xl font-semibold text-gray-700 dark:text-gray-200 sm:truncate tracking-tight">Ban Management</h2>
                    <p class="text-xs font-thin text-gray-500 dark:text-gray-400">Manage banned users and view ban history</p>
                  </div>
                </div>
              </div>
              <div class="mt-5 flex lg:ml-4 lg:mt-0">
                <button onclick="showBanModal()" class="transition inline-flex items-center rounded-2xl bg-red-500 hover:bg-red-600 px-6 py-2 text-sm font-medium text-white shadow-sm">
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 mr-2">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 1 0 0-16 8 8 0 0 0 0 16ZM8.28 7.22a.75.75 0 0 0-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 1 0 1.06 1.06L10 11.06l1.72 1.72a.75.75 0 1 0 1.06-1.06L11.06 10l1.72-1.72a.75.75 0 0 0-1.06-1.06L10 8.94 8.28 7.22Z" clip-rule="evenodd" />
                  </svg>
                  Ban User
                </button>
              </div>
            </div>

            <!-- Alert Messages -->
            <div id="alert-success" class="hidden rounded-3xl bg-emerald-50 dark:bg-emerald-900/20 p-8 mb-5">
              <div class="flex">
                <div class="flex-shrink-0">
                  <svg class="h-5 w-5 text-emerald-400" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z" clip-rule="evenodd" />
                  </svg>
                </div>
                <div class="ml-3">
                  <h3 class="text-md font-medium tracking-tight text-emerald-800 dark:text-emerald-200" id="alert-success-text"></h3>
                </div>
              </div>
            </div>

            <div id="alert-error" class="hidden rounded-3xl bg-red-50 dark:bg-red-900/20 p-8 mb-5">
              <div class="flex">
                <div class="flex-shrink-0">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-5 w-5 text-red-400">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                </div>
                <div class="ml-3">
                  <h3 class="text-md font-medium tracking-tight text-red-800 dark:text-red-200" id="alert-error-text"></h3>
                </div>
              </div>
            </div>

            <!-- Banned Users List -->
            <div class="bg-white dark:bg-gray-800 shadow rounded-3xl overflow-hidden">
              <div class="px-6 py-5 border-b border-gray-200 dark:border-gray-700">
                <h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-white">Banned Users</h3>
                <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">A list of all currently banned users</p>
              </div>
              <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                  <thead class="bg-gray-50 dark:bg-gray-900">
                    <tr>
                      <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">User</th>
                      <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Reason</th>
                      <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Banned By</th>
                      <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Date</th>
                      <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Expires</th>
                      <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Actions</th>
                    </tr>
                  </thead>
                  <tbody id="bans-list" class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
                    <tr>
                      <td colspan="6" class="px-6 py-4 text-center text-sm text-gray-500 dark:text-gray-400">
                        Loading banned users...
                      </td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
  </div>

  <!-- Ban User Modal -->
  <div id="banModal" class="hidden fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center z-50">
    <div class="bg-white dark:bg-gray-800 rounded-3xl shadow-xl max-w-md w-full mx-4">
      <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
        <h3 class="text-lg font-medium text-gray-900 dark:text-white">Ban User</h3>
      </div>
      <div class="px-6 py-4">
        <form id="banForm">
          <div class="space-y-4">
            <div>
              <label for="userId" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">User ID</label>
              <input type="text" id="userId" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-xl bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-white focus:ring-2 focus:ring-red-500 focus:border-transparent">
            </div>
            <div>
              <label for="banReason" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Reason</label>
              <textarea id="banReason" rows="3" required class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-xl bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-white focus:ring-2 focus:ring-red-500 focus:border-transparent"></textarea>
            </div>
            <div>
              <label for="banDuration" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Duration</label>
              <select id="banDuration" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-xl bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-white focus:ring-2 focus:ring-red-500 focus:border-transparent">
                <option value="">Permanent</option>
                <option value="3600">1 Hour</option>
                <option value="86400">1 Day</option>
                <option value="604800">1 Week</option>
                <option value="2592000">1 Month</option>
              </select>
            </div>
            <div class="flex items-center">
              <input type="checkbox" id="cleanupServers" checked class="rounded border-gray-300 dark:border-gray-600 text-red-600 focus:ring-red-500">
              <label for="cleanupServers" class="ml-2 text-sm text-gray-700 dark:text-gray-300">Delete user's servers</label>
            </div>
          </div>
        </form>
      </div>
      <div class="px-6 py-4 bg-gray-50 dark:bg-gray-900 rounded-b-3xl flex justify-end gap-3">
        <button type="button" onclick="hideBanModal()" class="px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-xl transition">
          Cancel
        </button>
        <button type="submit" form="banForm" class="px-4 py-2 text-sm font-medium text-white bg-red-600 hover:bg-red-700 rounded-xl transition">
          Ban User
        </button>
      </div>
    </div>
  </div>

  <script>
    let bannedUsers = [];

    // Load banned users on page load
    document.addEventListener('DOMContentLoaded', function() {
      loadBannedUsers();
    });

    // Load banned users from API
    async function loadBannedUsers() {
      try {
        const response = await fetch('/admin/bans/list');
        const data = await response.json();
        
        if (data.success) {
          bannedUsers = data.bans;
          renderBannedUsers();
        } else {
          showAlert('error', 'Failed to load banned users');
        }
      } catch (error) {
        console.error('Error loading banned users:', error);
        showAlert('error', 'Failed to load banned users');
      }
    }

    // Render banned users in table
    function renderBannedUsers() {
      const tbody = document.getElementById('bans-list');
      
      if (bannedUsers.length === 0) {
        tbody.innerHTML = `
          <tr>
            <td colspan="6" class="px-6 py-8 text-center text-sm text-gray-500 dark:text-gray-400">
              No banned users found
            </td>
          </tr>
        `;
        return;
      }

      tbody.innerHTML = bannedUsers.map(ban => `
        <tr>
          <td class="px-6 py-4 whitespace-nowrap">
            <div class="text-sm font-medium text-gray-900 dark:text-white">${ban.userId}</div>
          </td>
          <td class="px-6 py-4">
            <div class="text-sm text-gray-900 dark:text-white max-w-xs truncate">${ban.reason || 'No reason provided'}</div>
          </td>
          <td class="px-6 py-4 whitespace-nowrap">
            <div class="text-sm text-gray-500 dark:text-gray-400">${ban.bannedBy || 'System'}</div>
          </td>
          <td class="px-6 py-4 whitespace-nowrap">
            <div class="text-sm text-gray-500 dark:text-gray-400">${formatDate(ban.bannedAt)}</div>
          </td>
          <td class="px-6 py-4 whitespace-nowrap">
            <div class="text-sm text-gray-500 dark:text-gray-400">
              ${ban.expiresAt ? formatDate(ban.expiresAt) : '<span class="text-red-600 dark:text-red-400 font-medium">Permanent</span>'}
            </div>
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
            <button onclick="unbanUser('${ban.userId}')" class="text-green-600 hover:text-green-900 dark:text-green-400 dark:hover:text-green-300 transition">
              Unban
            </button>
          </td>
        </tr>
      `).join('');
    }

    // Format date
    function formatDate(timestamp) {
      const date = new Date(timestamp);
      return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();
    }

    // Show ban modal
    function showBanModal() {
      document.getElementById('banModal').classList.remove('hidden');
    }

    // Hide ban modal
    function hideBanModal() {
      document.getElementById('banModal').classList.add('hidden');
      document.getElementById('banForm').reset();
    }

    // Handle ban form submission
    document.getElementById('banForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const userId = document.getElementById('userId').value;
      const reason = document.getElementById('banReason').value;
      const duration = document.getElementById('banDuration').value;
      const cleanup = document.getElementById('cleanupServers').checked;

      try {
        const response = await fetch('/admin/bans/ban', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            userId,
            reason,
            duration: duration || null,
            cleanup
          })
        });

        const data = await response.json();

        if (data.success) {
          showAlert('success', 'User banned successfully');
          hideBanModal();
          loadBannedUsers();
        } else {
          showAlert('error', data.error || 'Failed to ban user');
        }
      } catch (error) {
        console.error('Error banning user:', error);
        showAlert('error', 'Failed to ban user');
      }
    });

    // Unban user
    async function unbanUser(userId) {
      if (!confirm('Are you sure you want to unban this user?')) {
        return;
      }

      try {
        const response = await fetch('/admin/bans/unban', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            userId,
            reason: 'Unbanned by admin'
          })
        });

        const data = await response.json();

        if (data.success) {
          showAlert('success', 'User unbanned successfully');
          loadBannedUsers();
        } else {
          showAlert('error', data.error || 'Failed to unban user');
        }
      } catch (error) {
        console.error('Error unbanning user:', error);
        showAlert('error', 'Failed to unban user');
      }
    }

    // Show alert
    function showAlert(type, message) {
      const alertDiv = document.getElementById(`alert-${type}`);
      const alertText = document.getElementById(`alert-${type}-text`);
      
      alertText.textContent = message;
      alertDiv.classList.remove('hidden');
      
      setTimeout(() => {
        alertDiv.classList.add('hidden');
      }, 5000);
    }

    // Close modal on escape key
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape') {
        hideBanModal();
      }
    });

    // Close modal on background click
    document.getElementById('banModal').addEventListener('click', function(e) {
      if (e.target === this) {
        hideBanModal();
      }
    });
  </script>
</body>
</html>
